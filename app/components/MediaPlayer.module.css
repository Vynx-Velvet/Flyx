/* ========================================
   FLYX MEDIA PLAYER - CLEAN & PROFESSIONAL
   ======================================== */

.mediaContainer {
  position: relative;
  width: 100%;
  max-width: 1400px;
  height: clamp(500px, 75vh, 800px);
  margin: clamp(8px, 2vh, 20px) auto;
  background: linear-gradient(135deg, 
    rgba(5, 8, 25, 0.95) 0%, 
    rgba(15, 25, 50, 0.9) 50%, 
    rgba(25, 35, 70, 0.85) 100%);
  border-radius: 24px;
  padding: 8px;
  overflow: hidden;
  box-shadow: 
    0 0 60px rgba(0, 255, 255, 0.3),
    0 0 120px rgba(0, 100, 255, 0.2),
    inset 0 0 80px rgba(0, 255, 255, 0.1);
  border: 2px solid transparent;
  background-clip: padding-box;
  
  /* Animated holographic border */
  &::before {
    content: '';
    position: absolute;
    inset: -2px;
    padding: 2px;
    background: conic-gradient(from 180deg at 50% 50%, 
      #00ffff 0deg, 
      #0080ff 60deg, 
      #8000ff 120deg, 
      #ff0080 180deg, 
      #ff8000 240deg, 
      #80ff00 300deg, 
      #00ffff 360deg);
    border-radius: 26px;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    animation: holoBorder 4s linear infinite;
    z-index: -1;
  }
  
  /* Floating particles effect */
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      radial-gradient(2px 2px at 20px 30px, rgba(0, 255, 255, 0.8), transparent),
      radial-gradient(2px 2px at 40px 70px, rgba(255, 0, 255, 0.6), transparent),
      radial-gradient(1px 1px at 90px 40px, rgba(0, 255, 150, 0.9), transparent),
      radial-gradient(1px 1px at 130px 80px, rgba(255, 255, 0, 0.7), transparent),
      radial-gradient(2px 2px at 160px 30px, rgba(0, 100, 255, 0.8), transparent);
    background-repeat: repeat;
    background-size: 200px 100px;
    animation: particles 20s linear infinite;
    pointer-events: none;
    opacity: 0.4;
    z-index: 1;
  }
}

@keyframes holoBorder {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes particles {
  0% { transform: translate(0, 0); }
  100% { transform: translate(-200px, -100px); }
}

.mediaPlayer {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  background: rgba(2, 6, 23, 0.8);
  border-radius: 20px;
  overflow: hidden;
  backdrop-filter: blur(20px);
  z-index: 2;
  border: 1px solid rgba(0, 255, 255, 0.2);
  box-shadow: inset 0 0 50px rgba(0, 255, 255, 0.1);
}

/* ======== LOADING INTERFACE - CLEAN ======== */
.loadingContainer {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(15, 23, 42, 0.98);
  backdrop-filter: blur(10px);
  z-index: 100;
  padding: clamp(12px, 3vmin, 24px);
  box-sizing: border-box;
}

.enhancedLoadingInterface {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  width: 100%;
  max-width: min(90vw, 400px);
  height: 100%;
  justify-content: center;
  gap: clamp(8px, 2vmin, 16px);
  overflow: hidden;
}

/* ======== PROGRESS SPINNER - COMPACT ======== */
.progressSpinnerContainer {
  position: relative;
  width: clamp(50px, 8vmin, 80px);
  height: clamp(50px, 8vmin, 80px);
  flex-shrink: 0;
}

.loadingSpinner {
  position: absolute;
  inset: 10%;
  border: 2px solid rgba(59, 130, 246, 0.2);
  border-top: 2px solid #3b82f6;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.progressRing {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}

.progressRingProgress {
  transition: stroke-dasharray 0.3s ease;
  filter: drop-shadow(0 0 3px rgba(59, 130, 246, 0.4));
}

.progressPercentage {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: clamp(10px, 1.2vmin, 14px);
  font-weight: 600;
  color: #ffffff;
  text-shadow: 0 0 4px rgba(59, 130, 246, 0.5);
  font-family: system-ui, -apple-system, sans-serif;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* ======== STATUS SECTION - ORGANIZED ======== */
.loadingStatus {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: clamp(6px, 1.5vmin, 10px);
  overflow: hidden;
  min-height: 0;
}

.loadingTitle {
  font-size: clamp(0.9rem, 2.2vmin, 1.3rem);
  font-weight: 600;
  color: #ffffff;
  background: linear-gradient(45deg, #3b82f6, #8b5cf6);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  margin: 0;
  line-height: 1.2;
}

.loadingPhase {
  font-size: clamp(0.75rem, 1.8vmin, 1rem);
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
  line-height: 1.3;
}

.loadingStep {
  font-size: clamp(0.65rem, 1.5vmin, 0.85rem);
  color: rgba(255, 255, 255, 0.6);
  margin: 0;
  line-height: 1.3;
}

/* ======== TIME INFO - COMPACT ======== */
.timeInfo {
  display: flex;
  justify-content: center;
  gap: clamp(12px, 3vmin, 20px);
  padding: clamp(6px, 1.5vmin, 10px);
  background: rgba(59, 130, 246, 0.08);
  border-radius: clamp(4px, 1vmin, 8px);
  border: 1px solid rgba(59, 130, 246, 0.15);
  flex-shrink: 0;
}

.timeItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: clamp(2px, 0.5vmin, 3px);
  min-width: 0;
}

.timeLabel {
  font-size: clamp(0.5rem, 1.2vmin, 0.7rem);
  color: rgba(255, 255, 255, 0.5);
  text-transform: uppercase;
  font-weight: 500;
  letter-spacing: 0.3px;
}

.timeValue {
  font-size: clamp(0.65rem, 1.5vmin, 0.9rem);
  font-weight: 600;
  color: #3b82f6;
  font-family: ui-monospace, 'SF Mono', monospace;
}

/* ======== PHASE INDICATORS - MINIMAL ======== */
.phaseIndicators {
  background: rgba(30, 41, 59, 0.4);
  border-radius: clamp(4px, 1vmin, 6px);
  padding: clamp(6px, 1.5vmin, 10px);
  flex-shrink: 0;
  max-height: 25vh;
  overflow-y: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.phaseIndicators::-webkit-scrollbar {
  display: none;
}

.phaseIndicator {
  display: flex;
  align-items: center;
  padding: clamp(3px, 0.8vmin, 5px) clamp(6px, 1.5vmin, 8px);
  margin: clamp(1px, 0.3vmin, 2px) 0;
  border-radius: clamp(2px, 0.5vmin, 3px);
  transition: all 0.2s ease;
  opacity: 0.6;
  font-size: clamp(0.55rem, 1.3vmin, 0.75rem);
}

.phaseIndicator.active {
  background: rgba(59, 130, 246, 0.15);
  opacity: 1;
  border-left: 2px solid #3b82f6;
}

.phaseIndicator.completed {
  opacity: 1;
  background: rgba(34, 197, 94, 0.1);
  border-left: 2px solid #22c55e;
}

.phaseIcon {
  width: clamp(10px, 2.5vmin, 14px);
  height: clamp(10px, 2.5vmin, 14px);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: clamp(6px, 1.5vmin, 8px);
  font-size: clamp(0.45rem, 1.1vmin, 0.65rem);
  flex-shrink: 0;
}

.phaseLabel {
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.2;
  min-width: 0;
  word-break: break-word;
}

/* ======== FUN FACTS - SUBTLE ======== */
.funFacts {
  flex-shrink: 0;
}

.funFact {
  font-size: clamp(0.6rem, 1.4vmin, 0.8rem);
  color: rgba(255, 255, 255, 0.5);
  line-height: 1.3;
  font-style: italic;
  margin: 0;
  text-align: center;
}

/* ======== ERROR HANDLING ======== */
.errorContainer {
  position: absolute;
  inset: clamp(10px, 5vmin, 20px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  background: rgba(15, 23, 42, 0.95);
  border-radius: clamp(8px, 2vmin, 12px);
  border: 1px solid rgba(239, 68, 68, 0.3);
  padding: clamp(16px, 4vmin, 24px);
  gap: clamp(8px, 2vmin, 16px);
  box-sizing: border-box;
}

.errorContainer h3 {
  color: #ef4444;
  font-size: clamp(0.9rem, 2.2vmin, 1.3rem);
  margin: 0;
}

.errorMessage {
  color: rgba(255, 255, 255, 0.8);
  font-size: clamp(0.8rem, 2vmin, 1.1rem);
  margin: 0;
  line-height: 1.4;
}

.errorActions {
  display: flex;
  gap: clamp(8px, 2vmin, 12px);
  flex-wrap: wrap;
  justify-content: center;
}

.retryButton, .switchServerButton {
  padding: clamp(6px, 1.5vmin, 10px) clamp(12px, 3vmin, 16px);
  border: none;
  border-radius: clamp(4px, 1vmin, 6px);
  font-size: clamp(0.7rem, 1.7vmin, 1rem);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: clamp(80px, 20vmin, 120px);
}

.retryButton {
  background: #3b82f6;
  color: white;
}

.switchServerButton {
  background: #6b7280;
  color: white;
}

.retryButton:hover, .switchServerButton:hover {
  transform: translateY(-1px);
  filter: brightness(1.1);
}

/* ======== VIDEO CONTAINER WITH HOLOGRAPHIC FRAME ======== */
.videoContainer {
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
  background: linear-gradient(45deg, 
    rgba(0, 20, 40, 0.9) 0%, 
    rgba(0, 40, 80, 0.8) 50%, 
    rgba(0, 20, 60, 0.9) 100%);
  border-radius: 16px 16px 0 0;
  overflow: hidden;
  margin: 8px 8px 0 8px;
  border: 1px solid rgba(0, 255, 255, 0.3);
  box-shadow: 
    0 0 40px rgba(0, 255, 255, 0.2),
    inset 0 0 30px rgba(0, 255, 255, 0.1);
  
  /* Scanning line effect */
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(0, 255, 255, 0.8) 50%, 
      transparent 100%);
    animation: scanLine 3s linear infinite;
    z-index: 10;
  }
}

@keyframes scanLine {
  0% { left: -100%; }
  100% { left: 100%; }
}

.videoWrapper {
  position: relative;
  flex: 1;
  min-height: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #000;
  border-radius: 12px;
  margin: 8px;
  overflow: hidden;
  box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.8);
}

.videoElement {
  width: 100%;
  height: 100%;
  object-fit: contain;
  border-radius: 8px;
}

.videoOverlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 10;
  display: none;
}

.videoOverlay > * {
  pointer-events: auto;
}

/* Bottom controls row - for stream info only */
.bottomControls {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: clamp(8px, 2vmin, 16px);
  flex-wrap: wrap;
}

/* Episode navigation container */
.episodeNavigation {
  display: flex;
  align-items: center;
  gap: clamp(6px, 1.5vmin, 10px);
  background: rgba(0, 0, 0, 0.7);
  padding: clamp(4px, 1vmin, 8px) clamp(8px, 2vmin, 12px);
  border-radius: clamp(4px, 1vmin, 8px);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Overlay buttons */
.overlayButton {
  background: rgba(0, 0, 0, 0.7);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  padding: clamp(4px, 1vmin, 8px) clamp(8px, 2vmin, 12px);
  border-radius: clamp(4px, 1vmin, 6px);
  font-size: clamp(0.7rem, 1.6vmin, 0.9rem);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  backdrop-filter: blur(8px);
  font-family: system-ui, -apple-system, sans-serif;
}

.overlayButton:hover:not(.disabled) {
  background: rgba(59, 130, 246, 0.8);
  border-color: rgba(59, 130, 246, 0.6);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
}

.overlayButton.disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

/* Hide the old separate navigation controls - now integrated into mediaControls */
.navigationControls {
  display: none;
}

.navButton {
  padding: 10px 18px;
  background: linear-gradient(135deg, rgba(30, 80, 160, 0.9), rgba(40, 104, 192, 0.9));
  border: 2px solid rgba(0, 255, 255, 0.4);
  border-radius: 8px;
  color: #ffffff;
  font-family: 'SF Pro Display', system-ui, sans-serif;
  font-size: 13px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  min-width: 90px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  position: relative;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(10px);
  
  box-shadow: 
    0 4px 15px rgba(0, 255, 255, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.navButton:hover:not(.disabled) {
  border-color: rgba(0, 255, 255, 0.7);
  background: linear-gradient(135deg, rgba(40, 104, 192, 1), rgba(59, 130, 246, 1));
  transform: translateY(-1px);
  box-shadow: 
    0 6px 20px rgba(0, 255, 255, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.7);
}

.navButton.disabled {
  opacity: 0.4;
  cursor: not-allowed;
  border-color: rgba(100, 100, 100, 0.3);
  background: #505050;
  color: rgba(200, 200, 200, 0.8);
  text-shadow: none;
}

.navigationButtons .episodeInfo {
  color: #ffffff;
  font-family: 'SF Pro Display', system-ui, sans-serif;
  font-size: 14px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
  padding: 10px 18px;
  background: linear-gradient(135deg, rgba(0, 150, 255, 0.9), rgba(59, 130, 246, 0.9));
  border: 2px solid rgba(0, 200, 255, 0.6);
  border-radius: 8px;
  white-space: nowrap;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 70px;
  backdrop-filter: blur(10px);
  box-shadow: 
    0 4px 15px rgba(0, 150, 255, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

/* ======== STREAM INFO (IN OVERLAY) ======== */

.streamInfo {
  /* Remove absolute positioning - now in bottomControls flex container */
  display: flex;
  gap: clamp(4px, 1vmin, 8px);
  align-items: center;
}

.streamType {
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: clamp(2px, 0.5vmin, 4px) clamp(6px, 1.5vmin, 8px);
  border-radius: clamp(2px, 0.5vmin, 4px);
  font-size: clamp(0.6rem, 1.4vmin, 0.8rem);
  border: 1px solid rgba(59, 130, 246, 0.3);
}

.qualityCount {
  background: rgba(0, 0, 0, 0.8);
  color: rgba(255, 255, 255, 0.8);
  padding: clamp(2px, 0.5vmin, 4px) clamp(6px, 1.5vmin, 8px);
  border-radius: clamp(2px, 0.5vmin, 4px);
  font-size: clamp(0.6rem, 1.4vmin, 0.8rem);
  border: 1px solid rgba(75, 85, 99, 0.3);
}

/* Old subtitle styles removed - now handled in .mediaControls section */

.subtitleCount {
  background: rgba(0, 0, 0, 0.8);
  color: rgba(168, 85, 247, 0.9);
  padding: clamp(2px, 0.5vmin, 4px) clamp(6px, 1.5vmin, 8px);
  border-radius: clamp(2px, 0.5vmin, 4px);
  font-size: clamp(0.6rem, 1.4vmin, 0.8rem);
  border: 1px solid rgba(168, 85, 247, 0.3);
  font-weight: 500;
}

.compactControls {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: clamp(6px, 1.5vmin, 10px);
  background: rgba(15, 23, 42, 0.9);
  border-radius: clamp(4px, 1vmin, 6px);
  margin-top: auto;
  gap: clamp(8px, 2vmin, 12px);
  flex-wrap: wrap;
  min-height: clamp(32px, 8vmin, 44px);
  box-sizing: border-box;
  z-index: 15;
  position: relative;
}

.compactButton {
  padding: clamp(4px, 1vmin, 6px) clamp(8px, 2vmin, 12px);
  background: rgba(59, 130, 246, 0.15);
  border: 1px solid rgba(59, 130, 246, 0.3);
  border-radius: clamp(2px, 0.5vmin, 4px);
  color: white;
  font-size: clamp(0.65rem, 1.5vmin, 0.85rem);
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: clamp(60px, 15vmin, 80px);
  text-align: center;
}

.compactButton:hover:not(.disabled) {
  background: rgba(59, 130, 246, 0.25);
  border-color: rgba(59, 130, 246, 0.5);
}

.compactButton.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.episodeControls {
  display: flex;
  align-items: center;
  gap: clamp(6px, 1.5vmin, 10px);
}

.episodeInfo {
  color: white;
  font-size: clamp(0.7rem, 1.6vmin, 0.9rem);
  font-weight: 600;
  padding: clamp(2px, 0.5vmin, 4px) clamp(4px, 1vmin, 8px);
  background: rgba(59, 130, 246, 0.2);
  border-radius: clamp(3px, 0.8vmin, 4px);
  font-family: system-ui, -apple-system, sans-serif;
  white-space: nowrap;
}

.debugId {
  color: rgba(255, 255, 255, 0.4);
  font-size: clamp(0.5rem, 1.2vmin, 0.7rem);
  font-family: ui-monospace, 'SF Mono', monospace;
  background: rgba(75, 85, 99, 0.2);
  padding: clamp(2px, 0.5vmin, 4px) clamp(4px, 1vmin, 6px);
  border-radius: clamp(2px, 0.5vmin, 4px);
  border: 1px solid rgba(75, 85, 99, 0.3);
}

/* ======== FUTURISTIC CONTROLS PANEL ======== */
.mediaControls {
  background: linear-gradient(135deg, 
    rgba(2, 8, 32, 0.95) 0%, 
    rgba(8, 15, 40, 0.9) 50%, 
    rgba(15, 25, 50, 0.95) 100%);
  backdrop-filter: blur(25px);
  padding: 16px 20px;
  display: flex;
  gap: 20px;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  border-top: 2px solid rgba(0, 255, 255, 0.3);
  border-radius: 0 0 16px 16px;
  margin: 0 8px 8px 8px;
  position: relative;
  overflow: visible;
  z-index: 5;
  min-height: 80px;
  box-shadow: 
    0 -4px 30px rgba(0, 255, 255, 0.2),
    inset 0 2px 20px rgba(0, 255, 255, 0.1);
  
  /* Circuit pattern overlay */
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background-image: 
      linear-gradient(90deg, rgba(0, 255, 255, 0.05) 1px, transparent 1px),
      linear-gradient(rgba(0, 255, 255, 0.05) 1px, transparent 1px);
    background-size: 20px 20px;
    pointer-events: none;
    opacity: 0.3;
  }
  
  /* Energy pulse effect */
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(0, 255, 255, 0.1) 50%, 
      transparent 100%);
    animation: energyPulse 6s linear infinite;
    pointer-events: none;
  }
}

@keyframes energyPulse {
  0% { left: -100%; }
  100% { left: 100%; }
}

.controlGroup {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 8px;
  position: relative;
  z-index: 10;
  min-height: 60px;
  overflow: visible;
  
  /* Holographic glow around each control group */
  &::before {
    content: '';
    position: absolute;
    inset: -12px;
    background: radial-gradient(circle at center, 
      rgba(0, 255, 255, 0.1) 0%, 
      transparent 70%);
    border-radius: 12px;
    z-index: -1;
    transition: all 0.3s ease;
  }
  
  &:hover::before {
    background: radial-gradient(circle at center, 
      rgba(0, 255, 255, 0.2) 0%, 
      transparent 70%);
    transform: scale(1.1);
  }
}

.controlLabel {
  color: rgba(0, 255, 255, 0.9);
  font-family: 'Orbitron', 'SF Pro Display', monospace, sans-serif;
  font-size: 11px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 2px;
  text-align: center;
  text-shadow: 
    0 0 10px rgba(0, 255, 255, 0.8),
    0 0 20px rgba(0, 255, 255, 0.4);
  position: relative;
  
  /* Animated underline */
  &::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 1px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(0, 255, 255, 1) 50%, 
      transparent 100%);
    transition: width 0.4s ease;
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.8);
  }
  
  &:hover::after {
    width: 120%;
  }
}

.subtitleLabel {
  color: rgba(255, 0, 255, 0.9);
  text-shadow: 
    0 0 10px rgba(255, 0, 255, 0.8),
    0 0 20px rgba(255, 0, 255, 0.4);
}

/* Navigation buttons container */
.navigationButtons {
  display: flex;
  gap: 8px;
  align-items: center;
  flex-wrap: wrap;
  justify-content: center;
}

.subtitleLabel::after {
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(255, 0, 255, 1) 50%, 
    transparent 100%);
  box-shadow: 0 0 5px rgba(255, 0, 255, 0.8);
}

/* ======== SIMPLE WORKING DROPDOWNS ======== */
.qualityDropdown,
.subtitleDropdown,
.serverDropdown {
  background: rgba(0, 30, 60, 0.95);
  border: 2px solid rgba(0, 255, 255, 0.6);
  border-radius: 8px;
  color: white;
  padding: 8px 12px;
  font-family: 'Orbitron', 'SF Pro Display', monospace, sans-serif;
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  min-width: 180px;
  height: 40px;
  backdrop-filter: blur(10px);
}

.qualityDropdown:hover,
.serverDropdown:hover {
  border-color: rgba(0, 255, 255, 1);
  background: rgba(0, 50, 100, 0.95);
}

.subtitleDropdown {
  border-color: rgba(255, 0, 255, 0.6);
  background: rgba(30, 0, 30, 0.95);
}

.subtitleDropdown:hover {
  border-color: rgba(255, 0, 255, 1);
  background: rgba(50, 0, 50, 0.95);
}

/* Option styling that actually works */
.qualityDropdown option,
.serverDropdown option {
  background: rgba(0, 30, 60, 1);
  color: white;
  padding: 8px;
  font-size: 13px;
}

.subtitleDropdown option {
  background: rgba(30, 0, 30, 1);
  color: white;
  padding: 8px;
  font-size: 13px;
}

.qualityDropdown:hover,
.serverDropdown:hover {
  border-color: rgba(0, 255, 255, 0.8);
  background: linear-gradient(135deg, 
    rgba(0, 40, 80, 0.95) 0%, 
    rgba(0, 60, 120, 0.9) 50%, 
    rgba(0, 50, 100, 0.95) 100%);
  transform: none;
  box-shadow: 
    0 8px 30px rgba(0, 255, 255, 0.4),
    inset 0 0 30px rgba(0, 255, 255, 0.2),
    inset 0 2px 0 rgba(255, 255, 255, 0.2);
  text-shadow: 0 0 8px rgba(255, 255, 255, 0.6);
}

/* Enhanced subtitle control styles */
.loadingIndicator {
  display: inline-block;
  margin-left: 8px;
  animation: spin 1s linear infinite;
  color: #3b82f6;
  font-size: 12px;
}

.errorIndicator {
  display: inline-block;
  margin-left: 8px;
  color: #ef4444;
  font-size: 12px;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.subtitleInfo {
  margin-top: 4px;
  font-size: 11px;
  color: rgba(255, 255, 255, 0.7);
}

.subtitleMeta {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  background: rgba(0, 0, 0, 0.3);
  padding: 2px 6px;
  border-radius: 3px;
  backdrop-filter: blur(4px);
}

.subtitleDropdown:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.subtitleDropdown option:disabled {
  color: #666;
  font-style: italic;
}

/* Enhanced control group for subtitles */
.controlGroup .subtitleLabel {
  display: flex;
  align-items: center;
  gap: 4px;
}

.noImdbIndicator {
  display: inline-block;
  margin-left: 8px;
  color: #f59e0b;
  font-size: 12px;
  title: "No IMDB ID found - subtitle search unavailable";
}

.subtitleStats {
  margin-top: 4px;
  font-size: 10px;
  color: rgba(255, 255, 255, 0.5);
}

.statText {
  font-style: italic;
}

/* Enhanced subtitle dropdown styling */
.subtitleDropdown optgroup {
  font-weight: bold;
  color: #f3f4f6;
  background-color: #374151;
}

.subtitleDropdown option[disabled] {
  font-weight: bold;
  background-color: #374151 !important;
  color: #f3f4f6 !important;
  font-style: normal;
}

.subtitleDropdown option:not([disabled]) {
  padding-left: 12px;
  background-color: #1f2937;
  color: #d1d5db;
}

.subtitleDropdown option:not([disabled]):hover {
  background-color: #374151;
}

/* ======== NEW ENHANCED SUBTITLE CONTROLS ======== */
.subtitleControls {
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;
}

.subtitleControls .subtitleDropdown {
  flex: 1;
}

.frontendIndicator {
  background: linear-gradient(45deg, #00ff88, #00aaff);
  color: #000;
  padding: 2px 6px;
  border-radius: 3px;
  font-size: 0.6rem;
  font-weight: 600;
  margin-left: 6px;
  animation: frontendGlow 2s ease-in-out infinite alternate;
  box-shadow: 0 0 10px rgba(0, 255, 136, 0.5);
}

@keyframes frontendGlow {
  0% { box-shadow: 0 0 5px rgba(0, 255, 136, 0.5); }
  100% { box-shadow: 0 0 15px rgba(0, 255, 136, 0.8); }
}

.noImdbIndicator {
  background: rgba(255, 165, 0, 0.2);
  color: #ffab00;
  padding: 2px 6px;
  border-radius: 3px;
  font-size: 0.6rem;
  font-weight: 600;
  margin-left: 6px;
  border: 1px solid rgba(255, 165, 0, 0.3);
}

.refreshButton {
  background: rgba(59, 130, 246, 0.2);
  border: 1px solid rgba(59, 130, 246, 0.4);
  color: #3b82f6;
  padding: 8px 10px;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 36px;
  height: 36px;
  backdrop-filter: blur(5px);
}

.refreshButton:hover:not(:disabled) {
  background: rgba(59, 130, 246, 0.3);
  border-color: rgba(59, 130, 246, 0.6);
  transform: scale(1.05);
  box-shadow: 0 0 10px rgba(59, 130, 246, 0.4);
}

.refreshButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  animation: spin 1s linear infinite;
}

.imdbInfo {
  color: rgba(255, 255, 255, 0.4);
  font-size: 0.7rem;
  margin-left: 8px;
  font-family: ui-monospace, 'SF Mono', monospace;
}

.debugInfo {
  margin-top: 4px;
  padding: 4px 8px;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 4px;
  border-left: 2px solid #ff6b6b;
}

.debugText {
  font-size: 0.65rem;
  color: rgba(255, 107, 107, 0.8);
  font-family: ui-monospace, 'SF Mono', monospace;
}

/* ========================================
   RESPONSIVE BREAKPOINTS - CLEAN
   ======================================== */

/* Large screens */
@media (min-width: 1200px) {
  .mediaContainer {
    max-width: 1300px;
    height: clamp(500px, 80vh, 800px);
  }
  
  .progressSpinnerContainer {
    width: clamp(60px, 8vmin, 90px);
    height: clamp(60px, 8vmin, 90px);
  }
}

/* Tablet */
@media (max-width: 1023px) {
  .mediaContainer {
    max-width: min(96vw, 900px);
    height: clamp(350px, 70vh, 600px);
  }
  
  .progressSpinnerContainer {
    width: clamp(45px, 7vmin, 70px);
    height: clamp(45px, 7vmin, 70px);
  }
  
  .compactControls {
    flex-direction: column;
    align-items: stretch;
  }
  
  .compactButton {
    min-width: auto;
  }
}

/* Mobile */
@media (max-width: 767px) {
  .mediaContainer {
    max-width: 98vw;
    height: clamp(400px, 75vh, 550px);
    margin: clamp(4px, 1vh, 8px) auto;
  }
  
  .progressSpinnerContainer {
    width: clamp(40px, 6vmin, 60px);
    height: clamp(40px, 6vmin, 60px);
  }
  
  .timeInfo {
    flex-direction: column;
    gap: clamp(6px, 1.5vmin, 10px);
  }
  
  .timeItem {
    flex-direction: row;
    gap: clamp(4px, 1vmin, 6px);
  }
  
  .compactControls {
    flex-direction: column;
  }
  
  .bottomControls {
    flex-direction: column;
    align-items: stretch;
    gap: clamp(6px, 1.5vmin, 8px);
  }
  
  .mediaControls {
    gap: clamp(8px, 2vmin, 12px);
    padding: clamp(8px, 2vmin, 12px);
    flex-direction: column;
    align-items: stretch;
  }
  
  .navigationButtons {
    flex-direction: column;
    gap: 6px;
  }
  
  .qualitySelector,
  .subtitleSelector,
  .serverSelector {
    flex-direction: column;
    align-items: stretch;
    gap: clamp(2px, 0.5vmin, 4px);
  }
  
  .controlLabel {
    font-size: clamp(0.65rem, 1.3vmin, 0.8rem);
  }
  
  .qualityDropdown,
  .subtitleDropdown,
  .serverDropdown {
    min-width: auto;
    width: 100%;
  }
  
  .episodeNavigation {
    justify-content: center;
  }
  
  .navigationControls {
    flex-direction: column;
    align-items: stretch;
    gap: clamp(6px, 1.5vmin, 8px);
  }
  
  .navButton {
    min-width: auto;
  }
  
  .errorActions {
    flex-direction: column;
    align-items: stretch;
  }
  
  .retryButton, .switchServerButton {
    min-width: auto;
  }
}

/* Small mobile */
@media (max-width: 480px) {
  .mediaContainer {
    height: clamp(250px, 55vh, 400px);
  }
  
  .progressSpinnerContainer {
    width: clamp(35px, 5vmin, 50px);
    height: clamp(35px, 5vmin, 50px);
  }
  
  .phaseIndicators {
    max-height: 20vh;
  }
  
  .enhancedLoadingInterface {
    gap: clamp(6px, 1.5vmin, 10px);
  }
  
  .navigationControls {
    padding: clamp(6px, 1.5vmin, 8px);
    margin-top: clamp(6px, 1.5vmin, 8px);
  }
  
  .episodeNavigation {
    flex-direction: column;
    gap: clamp(4px, 1vmin, 6px);
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .loadingSpinner,
  .progressRingProgress,
  .compactButton,
  .retryButton,
  .switchServerButton {
    animation: none;
    transition: none;
  }
}

/* Ensure video element properly displays subtitles */
.videoPlayer {
  position: relative;
  width: 100%;
  height: 100%;
  background: black;
}

.videoPlayer video {
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 1;
}

/* Force subtitle display */
.videoPlayer video.subtitles-enabled::cue {
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  font-size: 1.2em;
  font-family: Arial, sans-serif;
  line-height: 1.4;
  padding: 0.2em 0.4em;
  border-radius: 0.2em;
  text-align: center;
  position: relative;
  z-index: 999;
}

.videoPlayer video::cue {
  background-color: rgba(0, 0, 0, 0.8) !important;
  color: white !important;
  font-size: 1.2em !important;
  font-family: Arial, sans-serif !important;
  line-height: 1.4 !important;
  padding: 0.2em 0.4em !important;
  border-radius: 0.2em !important;
  text-align: center !important;
  white-space: pre-line !important;
}

/* Additional fallback styles */
.videoPlayer video::-webkit-media-text-track-display {
  color: white !important;
  background-color: rgba(0, 0, 0, 0.8) !important;
  font-size: 1.2em !important;
  font-family: Arial, sans-serif !important;
  text-align: center !important;
  padding: 0.2em 0.4em !important;
  border-radius: 0.2em !important;
  z-index: 999 !important;
}

/* Ensure subtitles appear above everything */
.videoPlayer video::-webkit-media-text-track-container {
  position: relative !important;
  z-index: 999 !important;
  pointer-events: none !important;
} 